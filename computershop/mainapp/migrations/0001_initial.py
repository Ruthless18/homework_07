# Generated by Django 4.1.6 on 2023-02-24 19:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('final_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Общая цена')),
                ('in_order', models.BooleanField(default=False)),
                ('for_anonymous_user', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Имя категории')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('slug', models.SlugField(unique=True)),
                ('image_01', models.ImageField(upload_to='', verbose_name='Изображение 1')),
                ('image_02', models.ImageField(upload_to='', verbose_name='Изображение 2')),
                ('image_03', models.ImageField(upload_to='', verbose_name='Изображение 3')),
                ('image_04', models.ImageField(upload_to='', verbose_name='Изображение 4')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Цена')),
                ('discount', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент скидки')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('brand', models.CharField(max_length=255, verbose_name='Производитель')),
                ('model', models.CharField(max_length=128, verbose_name='Модель')),
                ('color', models.CharField(max_length=64, verbose_name='Цвет')),
                ('diagonal', models.CharField(max_length=64, verbose_name='Диагональ')),
                ('screen_resolution', models.CharField(max_length=64, verbose_name='Разрешение экрана')),
                ('display_type', models.CharField(max_length=64, verbose_name='Тип дисплея')),
                ('os', models.CharField(max_length=128, verbose_name='Операционная система')),
                ('cpu', models.CharField(max_length=255, verbose_name='Процессор')),
                ('gpu', models.CharField(max_length=255, verbose_name='Видеокарта')),
                ('ram', models.CharField(max_length=255, verbose_name='Оперативная память')),
                ('ssd', models.CharField(max_length=255, verbose_name='Твердотельный накопитель')),
                ('hdd', models.CharField(max_length=255, verbose_name='НЖМД')),
                ('battery', models.CharField(max_length=255, verbose_name='Аккумулятор')),
                ('dimension', models.CharField(max_length=255, verbose_name='Габариты ШхВхГ')),
                ('web_cam', models.BooleanField(default=True, verbose_name='Веб-камера')),
                ('wifi', models.BooleanField(default=True, verbose_name='Wi-Fi')),
                ('bluetooth', models.BooleanField(default=True, verbose_name='Bluetooth')),
                ('rgb', models.BooleanField(default=True, verbose_name='Подсветка')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.category', verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Desktop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('slug', models.SlugField(unique=True)),
                ('image_01', models.ImageField(upload_to='', verbose_name='Изображение 1')),
                ('image_02', models.ImageField(upload_to='', verbose_name='Изображение 2')),
                ('image_03', models.ImageField(upload_to='', verbose_name='Изображение 3')),
                ('image_04', models.ImageField(upload_to='', verbose_name='Изображение 4')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Цена')),
                ('discount', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент скидки')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('brand', models.CharField(max_length=255, verbose_name='Производитель')),
                ('model', models.CharField(max_length=128, verbose_name='Модель')),
                ('form_factor', models.CharField(max_length=64, verbose_name='Форм-фактор корпуса')),
                ('color', models.CharField(max_length=64, verbose_name='Цвет')),
                ('os', models.CharField(max_length=128, verbose_name='Операционная система')),
                ('cpu', models.CharField(max_length=255, verbose_name='Процессор')),
                ('gpu', models.CharField(max_length=255, verbose_name='Видеокарта')),
                ('motherboard', models.CharField(max_length=255, verbose_name='Материнская плата')),
                ('ram', models.CharField(max_length=255, verbose_name='Оперативная память')),
                ('ssd', models.CharField(max_length=255, verbose_name='Твердотельный накопитель')),
                ('hdd', models.CharField(max_length=255, verbose_name='НЖМД')),
                ('psu', models.CharField(max_length=255, verbose_name='Блок питания')),
                ('case', models.CharField(max_length=255, verbose_name='Корпус')),
                ('dimension', models.CharField(max_length=255, verbose_name='Габариты ШхВхГ')),
                ('wifi', models.BooleanField(default=True, verbose_name='Wi-Fi')),
                ('bluetooth', models.BooleanField(default=True, verbose_name='Bluetooth')),
                ('rgb', models.BooleanField(default=True, verbose_name='Подсветка')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.category', verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер телефона')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('quality', models.PositiveIntegerField(default=1)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Общая цена')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_products', to='mainapp.cart', verbose_name='Корзина')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.customer', verbose_name='Покупатель')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.customer', verbose_name='Владелец'),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='related_cart', to='mainapp.cartproduct'),
        ),
    ]
